{
  "_id": ObjectId
  (
  "56c5da0945685b2f8e1ac8bc"
  ),
  "version": 19,
  "productName": "global-entry",
  "registeredTravellerNumber": "GEABC2345",
  "applications": [
    {
      "_typeHint": "caseworkerdomain._case.application.GlobalEntryApplicationDetails",
      "referenceId": "APPREF124",
      "applicationDate": ISODate
      (
      "2016-02-18T14:49:45.150Z"
      ),
      "passportDetails": {
        "givenName": "Andrew",
        "familyName": "Wayne",
        "passportNumber": "123456789",
        "expiryDate": ISODate
        (
        "2020-01-20T00:00:00Z"
        ),
        "dateOfBirth": ISODate
        (
        "1980-01-10T00:00:00Z"
        ),
        "gender": "M",
        "passportNationality": "GBR",
        "irisSchemeMembershipNumber": ""
      },
      "paymentDetails": {
        "fee": 42,
        "orderCode": "GRT000000147",
        "paymentDateTime": ISODate
        (
        "2016-02-18T14:49:45.150Z"
        ),
        "canRefund": false,
        "refundDetails": []
      },
      "previousNames": [
        {
          "givenName": "Clark",
          "familyName": "Kent"
        },
        {
          "givenName": "Peter",
          "familyName": "Parker"
        }
      ]
    }
  ],
  "currentDetails": {
    "passportDetails": {
      "givenName": "Andrew",
      "familyName": "Wayne",
      "passportNumber": "123456789",
      "expiryDate": ISODate
      (
      "2020-01-20T00:00:00Z"
      ),
      "dateOfBirth": ISODate
      (
      "1980-01-10T00:00:00Z"
      ),
      "gender": "M",
      "passportNationality": "GBR",
      "irisSchemeMembershipNumber": ""
    },
    "previousNames": [
      {
        "givenName": "Clark",
        "familyName": "Kent"
      },
      {
        "givenName": "Peter",
        "familyName": "Parker"
      }
    ],
    "email": "bruce@bobmail.info"
  },
  "createdDate": ISODate
  (
  "2016-02-18T14:49:45.150Z"
  ),
  "checks": {
    "caseProduct": {
      "_typeHint": "caseworkerdomain.product.GLOBAL_ENTRY_PRODUCT$"
    },
    "bio": {
      "_typeHint": "caseworkerdomain.check.BioCheck",
      "status": "CHECK_ACCEPTED"
    },
    "duplicate": {
      "_typeHint": "caseworkerdomain.check.DuplicateCheck",
      "status": "CHECK_ACCEPTED"
    },
    "centaur": {
      "_typeHint": "caseworkerdomain.check.CentaurCheck",
      "status": "CHECK_ACCEPTED"
    },
    "immigration": {
      "_typeHint": "caseworkerdomain.check.ImmigrationCheck",
      "status": "CHECK_ACCEPTED",
      "category": "UNK"
    },
    "wi": {
      "_typeHint": "caseworkerdomain.check.WICheck",
      "status": "CHECK_REJECTED"
    },
    "pending": {
      "_typeHint": "caseworkerdomain.check.PendingCheck",
      "status": "CHECK_NOT_STARTED"
    },
    "approval": {
      "_typeHint": "caseworkerdomain.check.ApprovalCheck",
      "status": "CHECK_NOT_STARTED"
    },
    "pnc": {
      "_typeHint": "caseworkerdomain.check.PNCCheck",
      "status": "CHECK_ACCEPTED"
    },
    "travelHistory": {
      "_typeHint": "caseworkerdomain.check.TravelHistoryCheck",
      "status": "CHECK_ACCEPTED",
      "resendStatus": "TRAVEL_HISTORY_RESEND_CHECK_NOT_STARTED"
    },
    "credibility": {
      "_typeHint": "caseworkerdomain.check.CredibilityCheck",
      "status": "CHECK_NOT_STARTED"
    },
    "dailyWash": {
      "_typeHint": "caseworkerdomain.check.DailyWashCheck",
      "status": "CHECK_NOT_STARTED",
      "passportLostOrStolen": false
    },
    "greenList": {
      "_typeHint": "caseworkerdomain.check.GreenListCheck",
      "status": "CHECK_NOT_STARTED",
      "awaitingRestore": false,
      "requiresInsert": false,
      "requiresDelete": false
    },
    "suspensionAndExpiry": {
      "_typeHint": "caseworkerdomain.check.SuspensionAndExpiryCheck",
      "status": "CHECK_NOT_STARTED",
      "expired": false,
      "suspendedBecausePassportExpired": false,
      "suspendedBecauseVisaExpired": false,
      "manuallySuspended": false,
      "suspendedBecauseLostOrStolenPassport": false,
      "suspendedBecauseMembershipExpired": false
    },
    "ukAccessCodeAcknowledged": {
      "_typeHint": "caseworkerdomain.check.ge.UKAccessCodeAcknowledgedCheck",
      "status": "CHECK_ACCEPTED"
    },
    "geApplicationDetails": {
      "_typeHint": "caseworkerdomain.check.ge.GEApplicationDetailsCheck",
      "status": "CHECK_ACCEPTED",
      "usApplicationId": "1066",
      "passId": "PASS_ID",
      "goesId": "123456789"
    },
    "geApplicationStatus": {
      "_typeHint": "caseworkerdomain.check.ge.GEApplicationStatusCheck",
      "status": "CHECK_ACCEPTED",
      "geStatus": "Approved"
    },
    "geEnrollmentStatus": {
      "_typeHint": "caseworkerdomain.check.ge.GEEnrollmentStatusCheck",
      "status": "CHECK_ACCEPTED",
      "geEnrollmentStatus": "APPROVED",
      "enrollmentDate": ISODate
      (
      "2016-02-18T00:00:00Z"
      ),
      "expiryDate": ISODate
      (
      "2022-02-18T00:00:00Z"
      )
    }
  },
  "notes": [],
  "legacyCase": false,
  "updatedDate": ISODate
  (
  "2016-02-18T14:52:10.204Z"
  ),
  "states": [
    "Rejected",
    "GEMatched"
  ],
  "caseStatus": "CASE_REJECTED",
  "latestApplication": {
    "_typeHint": "caseworkerdomain._case.application.GlobalEntryApplicationDetails",
    "referenceId": "APPREF124",
    "applicationDate": ISODate
    (
    "2016-02-18T14:49:45.150Z"
    ),
    "passportDetails": {
      "givenName": "Andrew",
      "familyName": "Wayne",
      "passportNumber": "123456789",
      "expiryDate": ISODate
      (
      "2020-01-20T00:00:00Z"
      ),
      "dateOfBirth": ISODate
      (
      "1980-01-10T00:00:00Z"
      ),
      "gender": "M",
      "passportNationality": "GBR",
      "irisSchemeMembershipNumber": ""
    },
    "paymentDetails": {
      "fee": 42,
      "orderCode": "GRT000000147",
      "paymentDateTime": ISODate
      (
      "2016-02-18T14:49:45.150Z"
      ),
      "canRefund": false,
      "refundDetails": []
    },
    "previousNames": [
      {
        "givenName": "Clark",
        "familyName": "Kent"
      },
      {
        "givenName": "Peter",
        "familyName": "Parker"
      }
    ]
  },
  "latestApplicationDate": ISODate
  (
  "2016-02-18T14:49:45.150Z"
  )
}